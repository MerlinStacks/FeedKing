// Admin scripts will go here 
jQuery(document).ready(function($) {
    // Copy URL to clipboard
    $(document).on('click', '.apfgs-copy-url-button', function() {
        var urlToCopy = $(this).data('url');
        if (urlToCopy) {
            navigator.clipboard.writeText(urlToCopy).then(function() {
                alert('Feed URL copied to clipboard!'); // Replace with a nicer notification if possible
            }, function(err) {
                alert('Could not copy URL: ' + err);
            });
        }
    });

    // Delete Feed Confirmation and AJAX
    $(document).on('click', 'a.submitdelete, a.apfgs-delete-feed-button', function(e) {
        e.preventDefault();
        
        if ( ! confirm( 'Are you sure you want to delete this feed? This action cannot be undone.' ) ) {
            return false;
        }

        var feed_id = $(this).data('feed-id') || $('input[name="feed_id"]').val();
        var $button = $(this);
        var $row = $button.closest('tr'); // For list table
        var $spinner = $button.siblings('.spinner').length ? $button.siblings('.spinner') : $button.parent().find('.spinner');
        
        if (!feed_id) {
            alert('Could not determine Feed ID for deletion.');
            return false;
        }

        $.ajax({
            url: ajaxurl, // WordPress AJAX URL
            type: 'POST',
            data: {
                action: 'apfgs_delete_feed',
                feed_id: feed_id,
                _ajax_nonce: apfgs_admin_params.nonce // Assuming you'll localize this nonce
            },
            beforeSend: function() {
                $spinner.addClass('is-active');
                $button.prop('disabled', true);
            },
            success: function(response) {
                if (response.success) {
                    if ($row.length) { // If deleting from the list table
                        $row.fadeOut(300, function() { $(this).remove(); });
                         alert('Feed deleted successfully.'); // Or update a notice area
                    } else { // If deleting from the edit page
                        alert('Feed deleted successfully. You will be redirected.');
                        window.location.href = apfgs_admin_params.manage_feeds_url;
                    }
                } else {
                    alert('Error deleting feed: ' + (response.data ? response.data.message : 'Unknown error'));
                    $button.prop('disabled', false);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert('AJAX error deleting feed: ' + textStatus + ' - ' + errorThrown);
                $button.prop('disabled', false);
            },
            complete: function() {
                $spinner.removeClass('is-active');
            }
        });
    });

    // Regenerate Feed AJAX (Placeholder - will need a separate handler)
    $(document).on('click', 'a.regenerate-feed, button.regenerate-feed, a.apfgs-regenerate-feed-button', function(e) {
        e.preventDefault();
        var feed_id = $(this).data('feed-id') || $('input[name="feed_id"]').val();
        var $button = $(this);
        var $spinner = $button.siblings('.spinner').length ? $button.siblings('.spinner') : $button.parent().find('.spinner, .apfgs-regenerate-spinner');
        var $row = $button.closest('tr'); // For list table updates

        if (!feed_id) {
            alert('Could not determine Feed ID for regeneration.');
            return;
        }

        // alert('Feed regeneration via AJAX is not fully implemented yet for feed ID: ' + feed_id);
        // Actual AJAX call for regeneration would go here
        $.ajax({
            url: apfgs_admin_params.ajax_url,
            type: 'POST',
            data: {
                action: 'apfgs_regenerate_feed',
                feed_id: feed_id,
                _ajax_nonce: apfgs_admin_params.nonce
            },
            beforeSend: function() {
                $spinner.addClass('is-active');
                $button.prop('disabled', true);
            },
            success: function(response) {
                if (response.success && response.data) {
                    alert('Feed regenerated successfully!'); // Replace with better notice
                    // Update UI elements
                    if (response.data.feed_url && response.data.file_name) {
                        // For edit page
                        $('#apfgs-feed-file-url-display-link').attr('href', response.data.feed_url).text(response.data.file_name);
                        $('.apfgs-copy-url-button').data('url', response.data.feed_url);
                        // Make sure the P tag and button are visible if they were hidden
                        var $feedStatusDiv = $('#feedstatusdiv .inside');
                        if ($feedStatusDiv.find('#apfgs-feed-file-url-display-link').length === 0) {
                             // If the structure was previously "not generated yet", rebuild it
                             $feedStatusDiv.html(
                                 '<p><strong>' + apfgs_admin_params.text_file_url + '</strong> ' +
                                 '<a href="' + response.data.feed_url + '" target="_blank" id="apfgs-feed-file-url-display-link">' + response.data.file_name + '</a> ' +
                                 '<button type="button" class="button button-small apfgs-copy-url-button" data-url="' + response.data.feed_url + '">' + apfgs_admin_params.text_copy_url + '</button></p>' +
                                 '<p><strong>' + apfgs_admin_params.text_last_generated + '</strong> <span id="apfgs-feed-last-generated-display"></span></p>'
                             );
                        }
                    }
                    if (response.data.last_generated_formatted) {
                        // For edit page
                        $('#apfgs-feed-last-generated-display').text(response.data.last_generated_formatted);
                        // For list table
                        if ($row.length) {
                            $row.find('.column-last_generated').text(response.data.last_generated_formatted);
                            var $urlCell = $row.find('.column-file_url');
                            if (response.data.feed_url && response.data.file_name) {
                                $urlCell.html('<a href="' + response.data.feed_url + '" target="_blank">' + response.data.file_name + '</a> ' +
                                '<button type="button" class="button button-small apfgs-copy-url-button" data-url="' + response.data.feed_url + '">' + apfgs_admin_params.text_copy_url + '</button>');
                            } else {
                                $urlCell.text('N/A');
                            }
                        }
                    }
                } else {
                    alert('Error regenerating feed: ' + (response.data ? response.data.message : 'Unknown error'));
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert('AJAX error regenerating feed: ' + textStatus + ' - ' + errorThrown);
            },
            complete: function() {
                $spinner.removeClass('is-active');
                $button.prop('disabled', false);
            }
        });
    });

    // Attribute Mapping: Show/hide static value input
    $(document).on('change', 'select.apfgs-source-select', function() {
        var $select = $(this);
        var $staticInput = $select.closest('tr').find('input.apfgs-static-value-input');
        if ($select.val() === 'static_value') {
            $staticInput.show();
        } else {
            $staticInput.hide();
        }
    });
    // Trigger change on page load for existing selections
    $('select.apfgs-source-select').trigger('change');

}); 